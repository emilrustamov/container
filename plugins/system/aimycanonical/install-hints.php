<?php
/*
 * Copyright (c) 2017-2024 Aimy Extensions, Netzum Sorglos Software GmbH
 * Copyright (c) 2014-2017 Aimy Extensions, Lingua-Systems Software GmbH
 *
 * https://www.aimy-extensions.com/
 *
 *
 * License: GNU GPLv2, see LICENSE.txt within distribution and/or
 *          http://www.aimy-extensions.com/software-license.html
 */
 defined( '_JEXEC' ) or die(); class plgSystemAimyCanonicalInstallerScript { const V_JOOMLA_MIN = '3.0'; const V_PHP_MIN = '5.3.10'; public function preflight( $type, $parent ) { return ( self::check_j5_bc_plugin_is_on() && self::check_php_version( self::V_PHP_MIN ) && self::check_joomla_version( self::V_JOOMLA_MIN ) ); } public function postflight( $route, $adapter ) { $task = strtolower( $route ); if ( $task != 'install' && $task != 'update' ) { return; } if ( $task == 'update' ) { require( __DIR__ . DIRECTORY_SEPARATOR . 'UpdateServer.php' ); AimyCanonicalUpdateServer::cleanup_server_list( $adapter ); require( __DIR__ . DIRECTORY_SEPARATOR . 'UpdateParams.php' ); AimyCanonicalUpdateParams::rename_param( 'custom_paths', 'custom_urls' ); } if ( $task == 'install' ) { JFactory::getLanguage()->load( 'plg_system_aimycanonical', JPATH_ADMINISTRATOR ); echo '<div style="padding:32px;text-align:center;">', '<h1>', '<img src="', JURI::base(), '../media/plg_aimycanonical/aimy-logo_340x327.png" ', 'width="340" height="327" alt="Aimy" />', '<br/>', 'Aimy Canonical (PRO) v27.3', '</h1>', '<p class="lead">', JText::_( $task == 'update' ? 'AIMY_CNCL_HINT_UPDATED' : 'AIMY_CNCL_HINT_INSTALLED' ), '!', '</p>'; $cfg_url = false; $enabled = false; try { $db = JFactory::getDbo(); $q = $db->getQuery( true ); $q->select( $db->quoteName( array( 'extension_id', 'enabled' ) ) ) ->from( $db->quoteName( '#__extensions' ) ) ->where( $db->quoteName( 'element' ) . ' = ' . $db->quote( 'aimycanonical' ) ) ->where( $db->quoteName( 'type' ) . ' = ' . $db->quote( 'plugin' ) ); $db->setQuery( $q ); $row = $db->loadObject(); if ( $row && $row->extension_id ) { $cfg_url = JRoute::_( 'index.php?' . 'option=com_plugins&task=plugin.edit&' . 'extension_id=' . $row->extension_id ); $enabled = $row->enabled; } } catch ( Exception $e ) {} echo '<p>'; if ( $cfg_url ) { echo self::_btn( $cfg_url, JText::_( ! $enabled ? 'AIMY_CNCL_HINT_ENABLE_CONFIGURE' : 'AIMY_CNCL_HINT_CONFIGURE' ) ), ' &nbsp; '; } echo self::_btn( 'https://www.aimy-extensions.com/joomla/canonical.html#user-manual', JText::_( 'AIMY_CNCL_HINT_READ_MANUAL' ), true ), ' &nbsp; ', self::_btn( 'https://aimy-extensions.com/images/products/canonical/plg-aimy-canonical.pdf?v=27.3', JText::_( 'AIMY_CNCL_HINT_DL_MANUAL' ), false ), '</p>'; echo '<p style="padding:12px 0;" />', '<a href="https://www.aimy-extensions.com/joomla/canonical.html" target="_blank">https://www.aimy-extensions.com/joomla/canonical.html</a>', '</p>', '</div>', "\n"; } } static private function _btn( $url, $text, $new_tab = false ) { return '<a class="btn btn-lg btn-success" href="' . $url . '" ' . ( $new_tab ? 'target="_blank" ' : '' ) . 'role="button">' . $text . '!' . '</a>'; } static private function check_j5_bc_plugin_is_on() { if ( intVal( substr( JVERSION, 0, 1 ) ) != 5 ) { return true; } $db = \Joomla\CMS\Factory::getDbo(); $q = $db->getQuery( true ); $q->select( $db->quoteName('enabled') ) ->from( $db->quoteName( '#__extensions' ) ) ->where( $db->quoteName( 'name' ) . ' = ' . $db->quote( 'plg_behaviour_compat' ) ); $db->setQuery( $q ); $on = $db->loadResult(); if ( ! $on or intVal( $on ) != 1 ) { $app = \Joomla\CMS\Factory::getApplication(); $app->enqueueMessage( 'Aimy Canonical needs the ' . '<b>"Behaviour - Backward Compatibility" plugin</b> ' . 'to be enabled if used on Joomla! 5. ' . 'Currently the plugin <b>is disabled</b> on your ' . 'website. ' . 'Please <b>enable it</b> in order to use Aimy Canonical.', 'error' ); return false; } return true; } static private function check_php_version( $min ) { if ( version_compare( PHP_VERSION, $min, '<' ) ) { JFactory::getApplication()->enqueueMessage( 'You are currently using PHP ' . PHP_VERSION . ', ' . 'but Aimy Canonical requires at least PHP ' . $min . '.', 'error' ); return false; } return true; } static private function check_joomla_version( $min ) { $jv = defined( 'JVERSION' ) ? JVERSION : 0; if ( version_compare( $jv, $min, '<' ) ) { JFactory::getApplication()->enqueueMessage( 'You are currently using Joomla! ' . $jv . ', ' . 'but Aimy Canonical requires at least Joomla! ' . $min . '.', 'error' ); return false; } return true; } } 
